{"remainingRequest":"/var/www/html/vue-training/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/vue-training/src/views/Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/vue-training/src/views/Login.vue","mtime":1644580183816},{"path":"/var/www/html/vue-training/node_modules/css-loader/dist/cjs.js","mtime":1643081894165},{"path":"/var/www/html/vue-training/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643081894713},{"path":"/var/www/html/vue-training/node_modules/postcss-loader/src/index.js","mtime":1643081894373},{"path":"/var/www/html/vue-training/node_modules/cache-loader/dist/cjs.js","mtime":1643081893877},{"path":"/var/www/html/vue-training/node_modules/vue-loader/lib/index.js","mtime":1643081894529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dC1yaWdodHsKICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50Owp9CgoudGV4dC1sZWZ0ewogIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsKfQoKLnRleHQtY2VudGVyewogIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50Owp9CgouZm9ybS1jb250cm9sIHsKICAgIGJvcmRlci1yYWRpdXM6IDFweDsKfQoKLm1sLTE1IHsKICAgIG1hcmdpbi1sZWZ0OiAxNXB4Owp9Cgo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsRA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"checkout\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-3\">\n        </div>\n\n        <div class=\"col-6 text-left\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title text-center\">Login</h5>\n              <div class=\"clearfix\"></div><br />\n\n              <form ref=\"loginForm\" action=\"\" method=\"POST\" @submit=\"login\">\n                <div class=\"form-group row mt-3\">\n                  <label for=\"email\" class=\"col-md-4 col-form-label text-md-right\">Email</label>\n\n                  <div class=\"col-md-6\">\n                      <input id=\"email\" type=\"text\" class=\"form-control\" name=\"email\" v-model=\"formdata.email\" required autocomplete=\"email\">\n                  </div>\n                </div>\n\n                <div class=\"form-group row mt-3\">\n                  <label for=\"password\" class=\"col-md-4 col-form-label text-md-right\">Password</label>\n\n                  <div class=\"col-md-6\">\n                      <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" v-model=\"formdata.password\" required autocomplete=\"password\">\n                  </div>\n                </div>\n\n                <div class=\"col-md-12 mt-4 text-center\">\n                  <button type=\"submit\" class=\"btn btn-primary text-center\">Login</button>\n                </div>\n              </form>\n              <div class=\"clearfix\"></div><br />\n\n              <div class=\"row\">\n                <div class=\"col-auto offset-2\">\n                  <a @click=\"onGoogleSignIn\" class=\"btn btn-block btn-danger\">\n                    <b-icon-google></b-icon-google>\n                    Sign in with Google\n                  </a>\n\n                  <a\n                    @click=\"logInWithFacebook\"\n                    class=\"ml-15 btn btn-block btn-primary\"\n                  >\n                    <b-icon-facebook></b-icon-facebook>\n                    Sign in with Facebook\n                  </a>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Checkout',\n  props: {\n    \n  },\n  data() {\n    return {\n      formdata: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    login(e){\n      e.preventDefault() // it prevent from page reload\n\n      var _this = this;\n      var registerUsers = localStorage.getItem('register_users');\n\n      if(registerUsers != undefined || registerUsers != null){\n        registerUsers = JSON.parse(registerUsers);\n\n        var regUser = [];\n\n        registerUsers.map(function(value, key) {\n          if(_this.formdata.email == value.email){\n             regUser.push(value);   \n          }\n        });\n\n        if(regUser.length > 0){\n          if(this.formdata.password == regUser[0].password){\n            this.$refs.loginForm.reset();\n\n            alert('Success! User logged in.');\n          }\n          else{\n            alert('Password do not match with user in our records.');\n          }\n        }\n        else{\n          alert(\"We does't find any user with this email in our records.\");\n        }\n      }else{\n        alert(\"We does't find any user with this email in our records.\");\n      }\n    },\n    async logInWithFacebook() {\n      window.FB.login(\n        (response) => {\n          if (response.authResponse) {\n            window.FB.api(\n              \"/me\",\n              { locale: \"en_US\", fields: \"id,name, email\" },\n              (response) => {\n                let users = JSON.parse(localStorage.getItem(\"register_users\"));\n\n                if (users != null && users.length > 0) {\n                  let findUser = users.findIndex(\n                    (user) => user.email == response.email\n                  );\n\n                  if (findUser == -1) {\n                    alert('Error! No any user found with this email.');\n                    return false;\n                  } else {\n                    var socialUser = users.find((user) => {\n                      return user.email === response.email;\n                    });\n                    this.createLoginUser(socialUser);\n                    this.errors.email = \"\";\n                    this.$router.push({ name: \"home\" });\n                  }\n                } else {\n                  alert('Error! No any user found with this email.');\n                  return false;\n                }\n\n                let newUser = {\n                  id: this.$uuid.v1(),\n                  name: response.name,\n                  email: response.email,\n                  password: response.id,\n                };\n\n                this.registerUser(newUser);\n              }\n            );\n          } else {\n            alert('Error! User cancelled login or did not fully authorize.');\n            return false;\n          }\n        },\n        { scope: \"email\" }\n      );\n      return false;\n    },\n    onSignIn(user) {\n      const profile = user.getBasicProfile();\n    },\n    validation() {\n      let users = JSON.parse(localStorage.getItem(\"register_users\"));\n\n      if (users != null && users.length > 0) {\n        let findUser = users.findIndex(\n          (user) => user.email == this.email && this.password == user.password\n        );\n\n        if (findUser == -1) {\n          alert('Error! Email or password is invalid.');\n\n          return false;\n        } else {\n          var user = users.find((user) => {\n            return user.email === this.email;\n          });\n          return true;\n        }\n      }\n\n      alert('Error! Email or password is invalid.');\n      return false;\n    },\n    async initFacebook() {\n      window.fbAsyncInit = function () {\n        window.FB.init({\n          appId: \"729711241341340\", //You will need to change this\n          cookie: true, // This is important, it's not enabled by default\n          xfbml: true, // parse XFBML\n          oauth: true,\n        });\n      };\n    },\n    async loadFacebookSDK(d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    },\n    onGoogleSignIn() {\n      const gapi = window.gapi;\n\n      gapi.load(\"auth2\", () => {\n        gapi.auth2.authorize(\n          {\n            client_id:\n              \"715709340166-ga646gel28qdsk8uqckt349jfl3h6qm1.apps.googleusercontent.com\",\n            scope: \"email profile openid\",\n            response_type: \"id_token permission\",\n            login_hint: \"email\",\n            ux_mode: \"popup\",\n            prompt: \"select_account\",\n          },\n          (response) => {\n            if (response.error) {\n              // An error happened!\n              return \"error\";\n            }\n            this.getLoggedInUser();\n          }\n        );\n      });\n    },\n    getLoggedInUser() {\n      const gapi = window.gapi;\n\n      gapi.load(\"auth2\", () => {\n        gapi.auth2.init().then(() => {\n          var auth = gapi.auth2.getAuthInstance();\n          // check login is true\n          if (auth.isSignedIn.get() == true) {\n            var user = auth.currentUser.get();\n            // get user profile\n            var profile = user.getBasicProfile();\n\n            let users = JSON.parse(localStorage.getItem(\"register_users\"));\n\n            if (users != null && users.length > 0) {\n              let findUser = users.findIndex(\n                (user) => user.email == profile.getEmail()\n              );\n\n              if (findUser == -1) {\n                alert('Error! No any user found with this email.');\n                return false;\n              }\n\n              //Make user sign in\n              var socialUser = users.find((user) => {\n                return user.email === profile.getEmail();\n              });\n              \n              this.$router.push({ name: \"home\" });\n            } else {\n              alert('Error! No any user found with this email.');\n            }\n          }\n        });\n      });\n    },\n    async mounted() {\n      await this.loadFacebookSDK(document, \"script\", \"facebook-jssdk\");\n      await this.initFacebook();\n    },\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.text-right{\n  text-align: right !important;\n}\n\n.text-left{\n  text-align: left !important;\n}\n\n.text-center{\n  text-align: center !important;\n}\n\n.form-control {\n    border-radius: 1px;\n}\n\n.ml-15 {\n    margin-left: 15px;\n}\n\n</style>\n"]}]}