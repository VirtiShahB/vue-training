{"remainingRequest":"/var/www/html/vue-training/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/vue-training/src/views/ProductList.vue?vue&type=style&index=0&id=67a91b63&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/vue-training/src/views/ProductList.vue","mtime":1643869856765},{"path":"/var/www/html/vue-training/node_modules/css-loader/dist/cjs.js","mtime":1643081894165},{"path":"/var/www/html/vue-training/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643081894713},{"path":"/var/www/html/vue-training/node_modules/postcss-loader/src/index.js","mtime":1643081894373},{"path":"/var/www/html/vue-training/node_modules/cache-loader/dist/cjs.js","mtime":1643081893877},{"path":"/var/www/html/vue-training/node_modules/vue-loader/lib/index.js","mtime":1643081894529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRleHQtbGVmdHsKICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7Cn0KLnRleHQtcmlnaHR7CiAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["ProductList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA","file":"ProductList.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"ProductList\">\n    <div class=\"container wrapper\">\n      <div class=\"row\">\n        <div class=\"col-md-3 text-left\">\n          <h5>Product List</h5>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12 text-right\">\n          <button class=\"btn btn-primary\" @click=\"$router.push({path: '/wishlist/products'})\">View Wishlist Products</button>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div><br />\n\n      <div class=\"row\">\n        <div class=\"col-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Category Name, Product Name\" v-model=\"formdata.search_keyword\">\n        </div>\n\n        <div class=\"col-3\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Price\" v-model=\"formdata.search_price\">\n        </div>\n\n        <div class=\"col-1\">\n            <button class=\"btn btn-primary\" @click=\"searchProduct()\">Search</button>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div><br />\n\n      <div class=\"row\">\n        <div class=\"col-md-3\" v-for=\"(product, productKey) in products\" :key=\"productKey\">\n          <div class=\"card\">\n            <img class=\"card-img-top\" :src=\"product.image\" :alt=\"product.title\" style=\"width: 150px;\">\n            <div class=\"card-body\">\n              <h4 class=\"card-title\"><span title=\"View Product\" @click=\"$router.push({path: '/product/'+product.id})\">{{ product.title }}</span></h4>\n              <p class=\"card-text\">{{\n          product.description.length > 100\n            ? product.description.substring(0, 100) + \"...\"\n            : product.description\n        }}</p>\n              <div class=\"row\">\n                <div class=\"col\">\n                    <p class=\"btn btn-danger btn-block\">{{ product.price }} $</p>\n                </div>\n                <div class=\"col\">\n                    <p class=\"btn btn-danger btn-block\" @click=\"addProductToWishlist(product)\">Add to Wishlist</p>\n                </div>\n                <div class=\"col\">\n                    <a href=\"#\" class=\"btn btn-success btn-block\">Add to cart</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport cart from '@/mixins/Cart'\n\nexport default {\n  name: 'ProductList',\n  mixins: [cart],\n  props: {\n    \n  },\n  data() {\n    return {\n      products: [],\n      allProducts: [],\n      formdata: {\n        search_keyword: '',\n        search_price: '',\n      }\n    }\n  },\n  mounted() {\n    const arr1 = [\"Cecilie\", \"Lone\"];\n    const arr2 = [\"Emil\", \"Tobias\", \"Linus\"];\n    const children = arr1.concat(arr2);\n\n    let text = \"ABCDEFG\"\n    const myArr = Array.from(text);\n\n    axios.get('https://fakestoreapi.com/products')\n      .then(res => {\n        this.products = res.data;\n        this.allProducts = res.data;\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  },\n  methods: {\n    searchProduct(){\n      var _this = this;\n\n      if(this.formdata.search_keyword.length > 0 || this.formdata.search_price.length > 0){\n        var tempProducts = [];\n\n        this.allProducts.map(function(value, key) {\n          var isProductAdd = 0;\n          \n          if(_this.formdata.search_price.length > 0 && value.price == _this.formdata.search_price){\n            isProductAdd = 1;\n          }\n\n          if(isProductAdd == 1){\n            tempProducts.push(value);\n          }\n        });\n\n        this.products = tempProducts;\n      }else{\n        this.products = this.allProducts;\n      }  \n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n .text-left{\n   text-align: left !important;\n }\n .text-right{\n   text-align: right !important;\n }\n</style>\n"]}]}